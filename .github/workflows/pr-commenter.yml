name: PR Commenter

on:
  pull_request:
    types: [opened]

jobs:
  post-comments:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Post Comments
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            
            try {
              // Try to read comments from the repository
              let comments = [];
              if (fs.existsSync('./comments.txt')) {
                comments = fs.readFileSync('./comments.txt', 'utf8')
                  .split('\n')
                  .filter(line => line.trim() !== '');
              } else {
                console.log('comments.txt file not found in repository, checking for environment variable');
                // If file doesn't exist, try to use environment variable
                const commentsEnv = process.env.COMMENTS;
                if (commentsEnv) {
                  comments = commentsEnv.split('\n').filter(line => line.trim() !== '');
                } else {
                  console.log('No comments found in environment variable either');
                  return;
                }
              }
              
              console.log(`Found ${comments.length} comments to post`);
              
              // Post each comment with a small delay to avoid rate limiting
              for (const comment of comments) {
                if (comment.trim()) {
                  console.log(`Posting comment: ${comment}`);
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: context.payload.pull_request.number,
                    body: comment
                  });
                  
                  // Add a small delay to avoid rate limiting
                  await new Promise(resolve => setTimeout(resolve, 1000));
                }
              }
            } catch (error) {
              console.error('Error posting comments:', error);
              core.setFailed(`Error posting comments: ${error.message}`);
            }
        env:
          COMMENTS: ${{ secrets.COMMENTS }}
